import {
  Entity,
  PrimaryGeneratedColumn,
  Column,
  CreateDateColumn,
  ManyToOne,
  JoinColumn,
} from 'typeorm';
import { Empresa } from './empresa.entity';

@Entity('transferencias')
export class Transferencia {
  @PrimaryGeneratedColumn('uuid', { name: 'id_transferencia' })
  idTransferencia: string;

  @Column({ type: 'varchar', length: 20, name: 'cuit_empresa' })
  cuitEmpresa: string;

  @CreateDateColumn({ name: 'fecha_transferencia' })
  fechaTransferencia: Date;

  @ManyToOne(() => Empresa, (empresa) => empresa.transferencias)
  @JoinColumn({ name: 'cuit_empresa' })
  empresa: Empresa;

  constructor(cuitEmpresa: string, fechaTransferencia?: Date) {
    this.cuitEmpresa = cuitEmpresa;
    this.fechaTransferencia = fechaTransferencia || new Date();
    // Note: idTransferencia will be auto-generated by TypeORM, but for tests we need to handle it
    if (!this.idTransferencia) {
      this.idTransferencia = this.generateUUID();
    }
  }

  private generateUUID(): string {
    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(
      /[xy]/g,
      function (c) {
        const r = (Math.random() * 16) | 0;
        const v = c === 'x' ? r : (r & 0x3) | 0x8;
        return v.toString(16);
      },
    );
  }
}
